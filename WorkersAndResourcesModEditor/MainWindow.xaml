<Window x:Class="WorkersAndResourcesModEditor.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WorkersAndResourcesModEditor"
        mc:Ignorable="d"
        Title="Workers and Resources Sowjet Republic - Mod Viewer 0.9.4" Height="450" Width="1200" Background="SeaShell">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="90"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition Width="10"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Grid Width="1000" HorizontalAlignment="Left">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                </Grid.ColumnDefinitions>

                <TextBlock Margin="5,5,0,5" Grid.Column="0" HorizontalAlignment="Left" Text="Mod Folder" 
                           Width="100" VerticalAlignment="Center" FontWeight="Bold" Foreground="Black"
                           ToolTip="Insert the path to the mods folder '784150' of Workers and Resources">
                </TextBlock>

                <TextBox Margin="0,5" Grid.Column="1" HorizontalAlignment="Left" Text="{Binding ModPath}"
                         VerticalAlignment="Center" Width="160"
                         ToolTip="Insert the path to the mods folder '784150' of Workers and Resources">
                </TextBox>

                <Button Margin="0,5" Grid.Column="2"  Width="70" Height="20" Content="Read Mods" Command="{x:Static local:WRCommands.ReadModsCommand}" Background="LightBlue">
                </Button>

                <TextBlock Margin="5,5,0,5" Grid.Column="0" Grid.Row="1" HorizontalAlignment="Left" Text="Work in progress" Width="100" Foreground="Black">
                </TextBlock>

                <TextBox Margin="0,5" Grid.Column="1" Grid.Row="1" HorizontalAlignment="Left" Text="{Binding WIPPath}" Width="160">
                </TextBox>

                <Button Margin="5" Grid.Column="2" Grid.Row="1" Width="70" Height="20" Content="Copy Mods" Command="{x:Static local:WRCommands.ToWIPCommand}" Background="LightBlue" >
                </Button>

                <!--<CheckBox Margin="0,5" Grid.Column="1" Grid.Row="2"  Content="Show Skin Mods" Checked="{Binding Skin}"></CheckBox>-->

                <Border Margin="0" Grid.Column="3" Grid.Row="0" Grid.ColumnSpan="2" Grid.RowSpan="3" Width="215" Background="LightGreen" Opacity="0.8">
                </Border>
                <Border Margin="0" Grid.Column="5" Grid.Row="0" Width="100" Background="LightGreen" Opacity="0.8">
                </Border>

                <Border Margin="0" Grid.Column="5" Grid.Row="1" Grid.RowSpan="2" Width="100" Background="SandyBrown" Opacity="0.8">
                </Border>

                <Border Margin="0" Grid.Column="6" Grid.Row="0"  Width="100" Background="yellow" Opacity="0.5">
                </Border>

                <Border Margin="0" Grid.Column="6" Grid.Row="1" Grid.RowSpan="2" Width="100" Background="Red" Opacity="0.6">
                </Border>
                <Border Margin="0" Grid.Column="7" Grid.Row="0" Grid.RowSpan="1" Width="130" Background="LightBlue" Opacity="0.8">
                </Border>
                <Border Margin="0" Grid.Column="7" Grid.Row="1" Grid.RowSpan="2" Width="130" Background="LightGray" Opacity="0.8">
                </Border>
                <Border Margin="0" Grid.Column="8" Grid.Row="0" Grid.RowSpan="1" Width="130" Background="White">
                </Border>
                <!-- residentials green -->
                <CheckBox Margin="5" Grid.Column="3" Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Center" Content="Residential" IsChecked="{Binding Residential}">
                </CheckBox>
                <CheckBox Margin="5" Grid.Column="3" Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Center" Content="Education" IsChecked="{Binding Education}">
                </CheckBox>
                <CheckBox Margin="5" Grid.Column="3" Grid.Row="2" HorizontalAlignment="Left" VerticalAlignment="Center" Content="Fire/Health" IsChecked="{Binding FireHealth}">
                </CheckBox>
                <CheckBox Margin="5" Grid.Column="4" Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Center" Content="Shops/Pubs" IsChecked="{Binding Shop}">
                </CheckBox>
                <CheckBox Margin="5" Grid.Column="4" Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Center" Content="Entertain/Religion" IsChecked="{Binding Entertain}">
                </CheckBox>
                <CheckBox Margin="5" Grid.Column="4" Grid.Row="2" HorizontalAlignment="Left" VerticalAlignment="Center" Content="Attractions" IsChecked="{Binding Attraction}">
                </CheckBox>
                <CheckBox Margin="5" Grid.Column="5" Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Center" Content="City Halls" IsChecked="{Binding CityHall}">
                </CheckBox>

                <!-- cargo & storage brown -->
                <CheckBox Margin="5" Grid.Column="5" Grid.Row="2" HorizontalAlignment="Left" VerticalAlignment="Center" Content="Storage" IsChecked="{Binding Storage}">
                </CheckBox>
                <CheckBox Margin="5" Grid.Column="5" Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Center" Content="Connectors" IsChecked="{Binding Connectors}">
                </CheckBox>

                <!-- industry yellow -->
                <CheckBox Margin="5" Grid.Column="6" Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Center" Content="Factories" IsChecked="{Binding Factories}">
                </CheckBox>

                <!-- energy & heat red -->
                <CheckBox Margin="5" Grid.Column="6" Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Center" Content="Power" IsChecked="{Binding Power}">
                </CheckBox>
                <CheckBox Margin="5" Grid.Column="6" Grid.Row="2" HorizontalAlignment="Left" VerticalAlignment="Center" Content="Heating" IsChecked="{Binding Heating}">
                </CheckBox>

                <!-- water/sewage blue -->
                <CheckBox Margin="5" Grid.Column="7" Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Center" Content="Water/Sewage" IsChecked="{Binding Water}">
                </CheckBox>
                
                <!-- transportation gray -->
                <CheckBox Margin="5" Grid.Column="7" Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Center" Content="DO/CO/TO/Forklift" IsChecked="{Binding Office}">
                </CheckBox>
                <CheckBox Margin="5" Grid.Column="7" Grid.Row="2" HorizontalAlignment="Left" VerticalAlignment="Center" Content="Stations" IsChecked="{Binding Station}">
                </CheckBox>

                <!-- monumentss white -->
                <CheckBox Margin="5" Grid.Column="8" Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Center" Content="Monuments" IsChecked="{Binding Monument}">
                </CheckBox>
                
                <!-- others white -->
                <CheckBox Margin="5" Grid.Column="8" Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Center" Content="Others" IsChecked="{Binding Others}">
                </CheckBox>
            </Grid>
        
            <Grid Margin="-115,0,0,0" Grid.Column="2" Grid.Row="0" Grid.RowSpan="3" HorizontalAlignment="Left" VerticalAlignment="Top" Width="300">
                <Grid.RowDefinitions>
                    <RowDefinition Height="30"></RowDefinition>
                    <RowDefinition Height="30"></RowDefinition>
                    <RowDefinition Height="30"></RowDefinition>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                </Grid.ColumnDefinitions>

                <TextBox Margin="0,5" Grid.Column="0" Grid.Row="2" HorizontalAlignment="Left" 
                             Text="{Binding Search, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                             KeyDown="KeyPressedOnSearchBox" Width="150"
                             ToolTip="Filters the mod list by the set filters and search string. The search will check the list by building name, mod ID and type for the entered string.">
                </TextBox>

                <Button Margin="5,5" Grid.Column="1" Grid.Row="2" Width="70" Height="20" Content="Search" Command="{x:Static local:WRCommands.SearchCommand}" Background="LightBlue"
                            ToolTip="Filters the mod list by the set filters and search string. The search will check the list by building name, mod ID and type for the entered string.">
                </Button>
            </Grid>
        </Grid>
        <DataGrid  x:Name="DG_Mods"
                   Grid.Row="1"
                   Grid.Column="0"
                   Margin="5"
                   ItemsSource="{Binding UIModelBuildingList, IsAsync=True}" AutoGenerateColumns="False" AlternationCount="2" 
                    LoadingRow="DataGrid_LoadingRow" EnableColumnVirtualization="True" EnableRowVirtualization="True"
                    AlternatingRowBackground="LightGray" MouseRightButtonDown="OnMainWindowCellRightClick">
            <DataGrid.Resources>
                <Style TargetType="DataGridRow">
                    <EventSetter Event="MouseDoubleClick" Handler="OnMouseDoubleClick"/>
                    <Setter Property="ToolTip" Value="{Binding BuildingName}"></Setter>
                </Style>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <DataGridTextColumn Header="Workshop ID" Binding="{Binding WorkshopID}" Width="80" SortDirection="Descending" FontWeight="Bold" IsReadOnly="True">
                </DataGridTextColumn>
                <DataGridTextColumn Header="Mod ID" Binding="{Binding ModID}" Width="120" SortDirection="Descending" FontWeight="Bold" IsReadOnly="True">
                </DataGridTextColumn>
                <DataGridTextColumn Header="Building" Binding="{Binding BuildingName}" Width="150" FontWeight="Normal" IsReadOnly="True">
                </DataGridTextColumn>
                <DataGridTemplateColumn Header="Image" Width="60"
                    IsReadOnly="True">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Image Source="{Binding PreviewImage}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!--<DataGridCheckBoxColumn Header="Skin" Binding="{Binding Skin}" IsReadOnly="True" Width="35">
                </DataGridCheckBoxColumn>-->
                <DataGridCheckBoxColumn Header="WIP" Binding="{Binding WIP}" Width="35">
                </DataGridCheckBoxColumn>
                <DataGridTextColumn Header="Path" Binding="{Binding FilePath}" Width="120" FontWeight="Normal" IsReadOnly="True">
                </DataGridTextColumn>
                <DataGridTextColumn Header="Type" Binding="{Binding Type}" Width="100" FontWeight="Normal" IsReadOnly="True">
                </DataGridTextColumn>
                <DataGridTextColumn Header="Workers Needed" 
                                    Binding="{Binding Workers_Needed}" 
                                    Visibility="{Binding Visibility, Source={x:Reference dummyVisibilityWorkersNeededElement}}"
                                    Width="100" FontWeight="Normal" IsReadOnly="True">
                </DataGridTextColumn>
                <DataGridTextColumn Header="Serve Citizens" 
                                    Visibility="{Binding Visibility, Source={x:Reference dummyVisibilityWorkersNeededElement}}"
                                    Binding="{Binding CitizensServe}" 
                                    Width="90" FontWeight="Normal" IsReadOnly="True">
                </DataGridTextColumn>
                <DataGridTextColumn Header="Workers Capacity" Binding="{Binding Workers_Capacity}" Width="110" FontWeight="Normal" IsReadOnly="True">
                </DataGridTextColumn>
                <DataGridTextColumn Header="Living Quality" 
                                    Visibility="{Binding Visibility, Source={x:Reference dummyVisibilityResidentialsElement}}"
                                    Binding="{Binding Quality}" 
                                    Width="90" FontWeight="Normal" IsReadOnly="True">
                </DataGridTextColumn>
                <DataGridTextColumn Header="Attract. Score" 
                                    Visibility="{Binding Visibility, Source={x:Reference dummyVisibilityAttractionsElement}}"
                                    Binding="{Binding AttractiveScore}" 
                                    Width="80" FontWeight="Normal" IsReadOnly="True">
                </DataGridTextColumn>
                <!-- Production -->
                <DataGridTemplateColumn Header="Production" Width="140" 
                                        Visibility="{Binding Visibility, Source={x:Reference dummyVisibilityFactoriesElement}}"
                                        ScrollViewer.CanContentScroll="False" 
                                        ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
                                        SortMemberPath="ProductionSorting">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <DataGrid ItemsSource="{Binding ProductionList, IsAsync=False}" 
                                      AutoGenerateColumns="False" 
                                      Background="Transparent" 
                                      BorderThickness="0"
                                      BorderBrush="Transparent"
                                      HeadersVisibility="None"
                                      EnableColumnVirtualization="True" 
                                      EnableRowVirtualization="True"
                                      IsHitTestVisible="False"
                                      GridLinesVisibility="None"
                                      RowBackground="Transparent"
                                      >
                                <DataGrid.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <Setter Property="Background" Value="Transparent"></Setter>
                                    </Style>
                                </DataGrid.CellStyle>
                                <DataGrid.Columns>
                                    <DataGridTextColumn Binding="{Binding Ware}" Width="90" FontWeight="Normal" IsReadOnly="True">
                                    </DataGridTextColumn>
                                    <DataGridTextColumn Binding="{Binding Amount}" Width="*" FontWeight="Normal" IsReadOnly="True">
                                    </DataGridTextColumn>
                                </DataGrid.Columns>
                            </DataGrid>

                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!-- Consumption -->
                <DataGridTemplateColumn Header="Consumption" Width="140" 
                                        Visibility="{Binding Visibility, Source={x:Reference dummyVisibilityFactoriesElement}}"
                                        ScrollViewer.CanContentScroll="False" 
                                        ScrollViewer.HorizontalScrollBarVisibility="Disabled" SortMemberPath="ConsumptionSorting">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <DataGrid ItemsSource="{Binding ConsumptionList, IsAsync=False}" 
                                      AutoGenerateColumns="False" 
                                      Background="Transparent" 
                                      BorderThickness="0"
                                      BorderBrush="Transparent"
                                      HeadersVisibility="None"
                                      EnableColumnVirtualization="True" 
                                      EnableRowVirtualization="True"
                                      GridLinesVisibility="None"
                                      RowBackground="Transparent"
                                      IsHitTestVisible="False">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Binding="{Binding Ware}" Width="90" FontWeight="Normal" IsReadOnly="True">
                                    </DataGridTextColumn>
                                    <DataGridTextColumn Binding="{Binding Amount}" Width="*" FontWeight="Normal" IsReadOnly="True">
                                    </DataGridTextColumn>
                                </DataGrid.Columns>
                            </DataGrid>

                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTextColumn Header="$ Production" 
                                    Visibility="{Binding Visibility, Source={x:Reference dummyVisibilityFactoriesElement}}"
                                    Binding="{Binding PriceProduction, StringFormat=N3}" Width="80" FontWeight="Normal" IsReadOnly="True">
                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="DataGridCell">
                                            <Setter Property="ToolTip" Value="The product price is the price based on the sell price of the year 1960" />
                                            <Setter Property="ToolTipService.ShowDuration" Value="10000" />
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="$ Consumption" 
                                    Visibility="{Binding Visibility, Source={x:Reference dummyVisibilityFactoriesElement}}"
                                    Binding="{Binding PriceConsumption, StringFormat=N3}" Width="90" FontWeight="Normal" IsReadOnly="True">
                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="DataGridCell">
                                            <Setter Property="ToolTip" Value="The consumption price is the price of all consumption materials based on the sell price of the year 1960" />
                                            <Setter Property="ToolTipService.ShowDuration" Value="10000" />
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Margin" 
                                    Visibility="{Binding Visibility, Source={x:Reference dummyVisibilityFactoriesElement}}"
                                    Binding="{Binding Margin, StringFormat=N1}" Width="60" FontWeight="Normal" IsReadOnly="True">
                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="DataGridCell">
                            <Setter Property="ToolTip" Value="The margin is the product price divided by the consumption price multiplied with 100. &#x0a;
A margin of 50 means that you can sell the product for 50% more than you have bought the materials it was made of. &#x0a;
However, no other costs are included like electricity or worker costs." />
                                            <Setter Property="ToolTipService.ShowDuration" Value="10000" />
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>


                <DataGridTemplateColumn Header="Electricity" Width="100" SortMemberPath="ElectronicWorking">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition></RowDefinition>
                                    <RowDefinition></RowDefinition>
                                    <RowDefinition></RowDefinition>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Grid.Row="2" Text="Living"/>
                                <TextBlock Grid.Column="0" Grid.Row="1" Text="Lightning"/>
                                <TextBlock Grid.Column="0" Grid.Row="0" Text="Working"/>
                                <TextBlock Grid.Column="1" Grid.Row="2" Margin="5,0,0,0" Text="{Binding ElectronicLiving}" Foreground="LawnGreen" />
                                <TextBlock Grid.Column="1" Grid.Row="1" Margin="5,0,0,0" Text="{Binding ElectronicLightning}" Foreground="Black"/>
                                <TextBlock Grid.Column="1" Grid.Row="0" Margin="5,0,0,0" Text="{Binding ElectronicWorking}" Foreground="OrangeRed"/>
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Loyalty" Width="100" SortMemberPath="LoyaltyRadius" Visibility="{Binding Visibility, Source={x:Reference dummyVisibilityLoyaltyElement}}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition></RowDefinition>
                                    <RowDefinition></RowDefinition>
                                    <RowDefinition></RowDefinition>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Grid.Row="0" Text="Radius"/>
                                <TextBlock Grid.Column="0" Grid.Row="1" Text="Strength"/>
                                <TextBlock Grid.Column="1" Grid.Row="0" Margin="5,0,0,0" Text="{Binding LoyaltyRadius}" />
                                <TextBlock Grid.Column="1" Grid.Row="1" Margin="5,0,0,0" Text="{Binding LoyaltyStrength}" />
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTextColumn Header="Storage Gen"
                                    Visibility="{Binding Visibility, Source={x:Reference dummyVisibilityStoragesElement}}"
                                    Binding="{Binding StorageCapacityGeneral}" Width="80" FontWeight="Normal" Foreground="DarkRed" IsReadOnly="True">
                </DataGridTextColumn>
                <DataGridTextColumn Header="Storage Open" 
                                    Visibility="{Binding Visibility, Source={x:Reference dummyVisibilityStoragesElement}}"
                                    Binding="{Binding StorageCapacityOpen}" Width="85" FontWeight="Normal" Foreground="DarkRed" IsReadOnly="True">
                </DataGridTextColumn>
                <DataGridTextColumn Header="Storage Cov" 
                                    Visibility="{Binding Visibility, Source={x:Reference dummyVisibilityStoragesElement}}"
                                    Binding="{Binding StorageCapacityCovered}" Width="80" FontWeight="Normal" Foreground="DarkRed" IsReadOnly="True">
                </DataGridTextColumn>

                <!--<DataGridTextColumn Header="Storage Cem" Binding="{Binding StorageCapacityCement}" Width="80" FontWeight="Normal" Foreground="DarkRed" IsReadOnly="True">
                </DataGridTextColumn>-->

                <DataGridTemplateColumn Header="Storage Build" Width="80" SortMemberPath="StorageCapacityCement" Visibility="{Binding Visibility, Source={x:Reference dummyVisibilityStoragesElement}}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"></RowDefinition>
                                    <RowDefinition Height="Auto"></RowDefinition>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Grid.Row="0" Text="Cement"/>
                                <TextBlock Grid.Column="0" Grid.Row="1" Text="Concrete"/>
                                <TextBlock Grid.Column="1" Grid.Row="0" Margin="5,0,0,0" Text="{Binding StorageCapacityCement}" />
                                <TextBlock Grid.Column="1" Grid.Row="1" Margin="5,0,0,0" Text="{Binding StorageCapacityConcrete}" />
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Storage Meat" Width="100" SortMemberPath="StorageCapacityCooler" Visibility="{Binding Visibility, Source={x:Reference dummyVisibilityStoragesElement}}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"></RowDefinition>
                                    <RowDefinition Height="Auto"></RowDefinition>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Grid.Row="0" Text="Cool"/>
                                <TextBlock Grid.Column="0" Grid.Row="1" Text="Livestock"/>
                                <TextBlock Grid.Column="1" Grid.Row="0" Margin="5,0,0,0" Text="{Binding StorageCapacityCooler}" />
                                <TextBlock Grid.Column="1" Grid.Row="1" Margin="5,0,0,0" Text="{Binding StorageCapacityLivestock}" />
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTextColumn Header="Storage Pass" 
                                    Visibility="{Binding Visibility, Source={x:Reference dummyVisibilityStoragesElement}}"
                                    Binding="{Binding StorageCapacityPassenger}" Width="80" FontWeight="Normal" Foreground="DarkRed" IsReadOnly="True">
                </DataGridTextColumn>
                <DataGridTextColumn Header="Storage Grav" 
                                    Visibility="{Binding Visibility, Source={x:Reference dummyVisibilityStoragesElement}}"
                                    Binding="{Binding StorageCapacityGravel}" Width="80" FontWeight="Normal" Foreground="DarkRed" IsReadOnly="True">
                </DataGridTextColumn>
                <DataGridTextColumn Header="Storage Veh" 
                                    Visibility="{Binding Visibility, Source={x:Reference dummyVisibilityStoragesElement}}"
                                    Binding="{Binding StorageCapacityVehicles}" Width="80" FontWeight="Normal" Foreground="DarkRed" IsReadOnly="True">
                </DataGridTextColumn>
                <DataGridTextColumn Header="Storage Oil" 
                                    Visibility="{Binding Visibility, Source={x:Reference dummyVisibilityStoragesElement}}"
                                    Binding="{Binding StorageCapacityOil}" Width="80" FontWeight="Normal" Foreground="DarkRed" IsReadOnly="True">
                </DataGridTextColumn>

                <DataGridTemplateColumn Header="Water" Width="100" SortMemberPath="StorageCapacityWater">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"></RowDefinition>
                                    <RowDefinition Height="Auto"></RowDefinition>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Grid.Row="0" Text="Water"/>
                                <TextBlock Grid.Column="0" Grid.Row="1" Text="Sewage"/>
                                <TextBlock Grid.Column="1" Grid.Row="0" Margin="5,0,0,0" Text="{Binding StorageCapacityWater}" />
                                <TextBlock Grid.Column="1" Grid.Row="1" Margin="5,0,0,0" Text="{Binding StorageCapacitySewage}" />
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Storage Nuclear" Width="100" SortMemberPath="StorageCapacityNuclear1" Visibility="{Binding Visibility, Source={x:Reference dummyVisibilityStoragesElement}}">
                    <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"></RowDefinition>
                                        <RowDefinition Height="Auto"></RowDefinition>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Grid.Row="0" Text="Nuclear 1"/>
                                    <TextBlock Grid.Column="0" Grid.Row="1" Text="Nuclear 2"/>
                                <TextBlock Grid.Column="1" Grid.Row="0" Margin="5,0,0,0" Text="{Binding StorageCapacityNuclear1}" />
                                <TextBlock Grid.Column="1" Grid.Row="1" Margin="5,0,0,0" Text="{Binding StorageCapacityNuclear2}" />
                                </Grid>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Special Storage" Width="130" SortMemberPath="SpecialStorageSorting" Visibility="{Binding Visibility, Source={x:Reference dummyVisibilityStoragesElement}}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <DataGrid ItemsSource="{Binding SpecialStorageList, IsAsync=False}" 
                                      AutoGenerateColumns="False" 
                                      Background="Transparent" 
                                      BorderThickness="0"
                                      BorderBrush="Transparent"
                                      HeadersVisibility="None"
                                      EnableColumnVirtualization="True" 
                                      EnableRowVirtualization="True"
                                      IsHitTestVisible="False"
                                      GridLinesVisibility="None"
                                      RowBackground="Transparent"
                                      >
                                <DataGrid.CellStyle>
                                    <Style TargetType="DataGridCell">
                                            <Setter Property="Background" Value="Transparent"></Setter>
                                    </Style>
                                </DataGrid.CellStyle>
                                <DataGrid.Columns>
                                    <DataGridTextColumn Binding="{Binding Ware}" Width="80" FontWeight="Normal" IsReadOnly="True">
                                    </DataGridTextColumn>
                                    <DataGridTextColumn Binding="{Binding Amount}" Width="*" FontWeight="Normal" IsReadOnly="True">
                                    </DataGridTextColumn>
                                </DataGrid.Columns>
                            </DataGrid>
                        </DataTemplate>
                        <!--<DataTemplate>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"></RowDefinition>
                                    <RowDefinition Height="Auto"></RowDefinition>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Grid.Row="0" Text="{Binding StorageSpecialID1}"/>
                                <TextBlock Grid.Column="0" Grid.Row="1" Text="{Binding StorageSpecialID2}"/>
                                <TextBlock Grid.Column="1" Grid.Row="0" Margin="5,0,0,0" Text="{Binding StorageSpecial1Capacity}">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding StorageSpecial1Capacity}" Value="0">
                                                    <Setter Property="Visibility" Value="Collapsed"></Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                                <TextBlock Grid.Column="1" Grid.Row="1" Margin="5,0,0,0" Text="{Binding StorageSpecial2Capacity}">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding StorageSpecial2Capacity}" Value="0">
                                                    <Setter Property="Visibility" Value="Collapsed"></Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Grid>
                        </DataTemplate>-->
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTextColumn Header="Heat" Binding="{Binding Heating}" Width="60" FontWeight="Normal" IsReadOnly="True">
                </DataGridTextColumn>
                <DataGridTemplateColumn Header="Image" Width="60"
                    IsReadOnly="True">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Image Source="{Binding PreviewImage}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>

        <FrameworkElement x:Name="dummyVisibilityFactoriesElement" Visibility="{Binding VisibilityFactories}"/>
        <FrameworkElement x:Name="dummyVisibilityResidentialsElement" Visibility="{Binding VisibilityResidentials}"/>
        <FrameworkElement x:Name="dummyVisibilityAttractionsElement" Visibility="{Binding VisibilityAttractions}"/>
        <FrameworkElement x:Name="dummyVisibilityWorkersNeededElement" Visibility="{Binding VisibilityWorkersNeeded}"/>
        <FrameworkElement x:Name="dummyVisibilityStoragesElement" Visibility="{Binding VisibilityStorages}"/>
        <FrameworkElement x:Name="dummyVisibilityLoyaltyElement" Visibility="{Binding VisibilityLoyalty}"/>
    </Grid>
</Window>
